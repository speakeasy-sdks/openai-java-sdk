/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package openai.javasdk.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;


public class CreateEmbeddingRequest {
    /**
     * Input text to embed, encoded as a string or array of tokens. To embed multiple inputs in a single request, pass an array of strings or array of token arrays. Each input must not exceed the max input tokens for the model (8191 tokens for `text-embedding-ada-002`). [Example Python code](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb) for counting tokens.
     * 
     */
    @JsonProperty("input")
    public Object input;

    public CreateEmbeddingRequest withInput(Object input) {
        this.input = input;
        return this;
    }
    
    @JsonProperty("model")
    public Object model;

    public CreateEmbeddingRequest withModel(Object model) {
        this.model = model;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")
    public Object user;

    public CreateEmbeddingRequest withUser(Object user) {
        this.user = user;
        return this;
    }
    
    public CreateEmbeddingRequest(@JsonProperty("input") Object input, @JsonProperty("model") Object model) {
        this.input = input;
        this.model = model;
  }
}
