/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package openai.javasdk.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateSearchRequest {
    /**
     * Up to 200 documents to search over, provided as a list of strings.
     * 
     * The maximum document length (in tokens) is 2034 minus the number of tokens in the query.
     * 
     * You should specify either `documents` or a `file`, but not both.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documents")public String[] documents;
    public CreateSearchRequest withDocuments(String[] documents) {
        this.documents = documents;
        return this;
    }
    
    /**
     * The ID of an uploaded file that contains documents to search over.
     * 
     * You should specify either `documents` or a `file`, but not both.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("file")public String file;
    public CreateSearchRequest withFile(String file) {
        this.file = file;
        return this;
    }
    
    /**
     * The maximum number of documents to be re-ranked and returned by search.
     * 
     * This flag only takes effect when `file` is set.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max_rerank")public Long maxRerank;
    public CreateSearchRequest withMaxRerank(Long maxRerank) {
        this.maxRerank = maxRerank;
        return this;
    }
    
    /**
     * Query to search against the documents.
     */
    @JsonProperty("query")public String query;
    public CreateSearchRequest withQuery(String query) {
        this.query = query;
        return this;
    }
    
    /**
     * A special boolean flag for showing metadata. If set to `true`, each document entry in the returned JSON will contain a "metadata" field.
     * 
     * This flag only takes effect when `file` is set.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("return_metadata")public Boolean returnMetadata;
    public CreateSearchRequest withReturnMetadata(Boolean returnMetadata) {
        this.returnMetadata = returnMetadata;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user")public Object user;
    public CreateSearchRequest withUser(Object user) {
        this.user = user;
        return this;
    }
    
}
